/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface SelfServeRegistryOperatorInterface extends utils.Interface {
  functions: {
    "addSelf(bytes32)": FunctionFragment;
    "addSelfToList(string)": FunctionFragment;
    "addSelfToRegistry(bytes32, string)": FunctionFragment;
    "removeSelf()": FunctionFragment;
    "removeSelfFromList(string)": FunctionFragment;
    "removeSelfFromRegistry(string)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addSelf"
      | "addSelfToList"
      | "addSelfToRegistry"
      | "removeSelf"
      | "removeSelfFromList"
      | "removeSelfFromRegistry"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addSelf",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "addSelfToList",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "addSelfToRegistry",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "removeSelf",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeSelfFromList",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "removeSelfFromRegistry",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(functionFragment: "addSelf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addSelfToList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addSelfToRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "removeSelf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeSelfFromList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeSelfFromRegistry",
    data: BytesLike
  ): Result;

  events: {};
}

export interface SelfServeRegistryOperator extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: SelfServeRegistryOperatorInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addSelf(
      fractalId: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addSelfToList(
      listId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addSelfToRegistry(
      fractalId: PromiseOrValue<BytesLike>,
      listId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    removeSelf(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    removeSelfFromList(
      listId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    removeSelfFromRegistry(
      listId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  addSelf(
    fractalId: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addSelfToList(
    listId: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addSelfToRegistry(
    fractalId: PromiseOrValue<BytesLike>,
    listId: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  removeSelf(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  removeSelfFromList(
    listId: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  removeSelfFromRegistry(
    listId: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addSelf(
      fractalId: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    addSelfToList(
      listId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    addSelfToRegistry(
      fractalId: PromiseOrValue<BytesLike>,
      listId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    removeSelf(overrides?: CallOverrides): Promise<void>;

    removeSelfFromList(
      listId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    removeSelfFromRegistry(
      listId: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addSelf(
      fractalId: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addSelfToList(
      listId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addSelfToRegistry(
      fractalId: PromiseOrValue<BytesLike>,
      listId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    removeSelf(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    removeSelfFromList(
      listId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    removeSelfFromRegistry(
      listId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addSelf(
      fractalId: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addSelfToList(
      listId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addSelfToRegistry(
      fractalId: PromiseOrValue<BytesLike>,
      listId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    removeSelf(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    removeSelfFromList(
      listId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    removeSelfFromRegistry(
      listId: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
